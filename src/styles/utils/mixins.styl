/*----------------------------------------------------

Mixins available:
-   absoluteCenter          - arguments:
-   placeholder             - arguments:
-   font-smoothing          - arguments:
-   img-url                 - arguments:
-   font-url                - arguments:
-   webfont                 - arguments:
------------------------------------------------------------- */

aspect-ratio(width, height)
    position relative
    &:before
        display block
        content " "
        width: 100%
        padding-top (height / width) * 100%

    > .content
        position absolute
        top 0
        left 0
        right 0
        bottom 0


absoluteCenter() {
    display block
    position absolute
    left 50%
    top 50%
    transform (translate(-50%, -50%))
}

placeholder()
    &::-webkit-input-placeholder
        {block}
    &:-moz-placeholder
        {block}
    &::-moz-placeholder
        {block}
    &:-ms-input-placeholder
        {block}

font-smoothing() {
    if current-property {
        -webkit-{current-property}: arguments
        if arguments == antialiased {
            -moz-osx-{current-property}: grayscale
        } else if arguments == subpixel-antialiased {
            -moz-osx-{current-property}: auto
        }
        {current-property}: arguments
    } else {
        error('font-smoothing() must be used within a property');
    }
}

img-url(file)
    return url("~assets/img/" + file)

font-url(file)
    return '~assets/fonts/' + file

webfont(family, file, weight = 400, font-style = normal)
    @font-face
        font-family family
        src url(font-url(file + '.woff2')) format('woff2'),
            url(font-url(file + '.woff')) format('woff')
        font-weight weight
        font-style font-style

clickable()
    cursor pointer
    -webkit-tap-highlight-color transparent
    &:focus
        outline none

scrollable(direction = 'y')
    if direction == 'x'
        overflow-x auto
        overflow-y hidden
    else if direction == 'y'
        overflow-x hidden
        overflow-y auto
    else if direction == 'xy'
        overflow auto
    -webkit-overflow-scrolling touch

image-width(fileName)
    return image-size('../../assets/img/' + fileName)[0]

image-height(fileName)
    return image-size('../../assets/img/' + fileName)[1]
